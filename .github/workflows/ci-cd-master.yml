name: MASTER | CI/CD with GitHub Actions

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCES_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCES_KEY_ID }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'
      - name: setup jdk 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Packaging the Application
        run: mvn clean package
      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Docker Compose Building
        working-directory: ./recursos/docker/docker-compose
        run: docker compose build
      - name: Tag and Push to Docker Image to Amazon Image Registry - ECR
        run: |
          
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot:latest ${{ secrets.IMAGE_REPO_URL }}:latest            
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_number }}            
          
          docker push ${{ secrets.IMAGE_REPO_URL }}:latest
          docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_number }}
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DAFINITION_NAME }} --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ secrets.IMAGE_REPO_URL }}:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.SERVICE_NAME }}
          cluster: ${{ secrets.CLUSTER_NAME }}
          wait-for-service-stability: true
      - name: Push to Docker Container Registry
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring_boot:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/spring_boot:latest ${{ secrets.DOCKER_USERNAME }}/spring_boot:${{ github.run_number }}            
          docker push ${{ secrets.DOCKER_USERNAME }}/spring_boot:${{ github.run_number }}
